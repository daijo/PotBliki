#!/bin/bash

# PotBliki, Plain Text Bliki Tools.
# Copyright (C) 2011  Daniel Hjort
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

SYSTEM=`uname -s`
SCRIPT_DIR="$( cd "$( dirname "$0" )" && pwd )"
INDEX_PAGE="IndexPage.txt"
_BLIKI_NAME="PotBliki"
_TARGET_DIR="~/bliki_home"
_CUSTOM_LINKS=""
_FOOTER_TEXT="Plain Text Bliki"
_DISQUS_SHORTNAME=""
_BLIKI_URL=""
_BLIKI_DESC="Bliki description."


function init {
  if [ -f ./.bliki/bliki_conf ]
  then
    echo "This is a bliki already."
    exit 1
  fi
  echo "Initialalizing bliki..."

  mkdir .bliki
  echo "BLIKI_NAME=\"$_BLIKI_NAME\"" > .bliki/bliki_conf
  echo "TARGET_DIR=\"$_TARGET_DIR\"" >> .bliki/bliki_conf
  echo "CUSTOM_LINKS=\"$_CUSTOM_LINKS\"" >> .bliki/bliki_conf
  echo "FOOTER_TEXT=\"$_FOOTER_TEXT\"" >> .bliki/bliki_conf

}

function make {

  if [ ! -f ./.bliki/bliki_conf ]
  then
    echo "No bliki found, use potbliki init to create one here."
    exit 1
  fi
  echo "Making bliki..."

  SRC_FILES=`ls *.txt`

  read_bliki_conf
  generate_index
  generate_feed
  add_footer
  markdown_wikiwords
  bliki_to_html
  add_disqus
  copy_to_targetdir
}

function read_bliki_conf {
  echo "Reading config..."

  . ./.bliki/bliki_conf

  _BLIKI_NAME=$BLIKI_NAME
  _TARGET_DIR=$TARGET_DIR
  _CUSTOM_LINKS=$CUSTOM_LINKS
  _FOOTER_TEXT=$FOOTER_TEXT
  _DISQUS_SHORTNAME=$DISQUS_SHORTNAME
  _BLIKI_URL=$BLIKI_URL
  _BLIKI_DESC=$BLIKI_DESC
}

function generate_index {
echo "Generating IndexPage..."

echo "$_BLIKI_NAME" > $INDEX_PAGE
echo "=========" >> $INDEX_PAGE
echo "----" >> $INDEX_PAGE
echo "" >> $INDEX_PAGE
echo "Posts"  >> $INDEX_PAGE
echo "-----" >> $INDEX_PAGE
echo "" >> $INDEX_PAGE

# Find all files with post header and print filename - date (sorted by date)

for f in $SRC_FILES
do
    FIRST_WORD=`head -n 1 $f | awk '{print $1}'`
    DATE=`head -n 4 $f | sed -n 3p | awk '{print $2}'`
    [ "$FIRST_WORD" == 'title:' ] && ( echo "* $DATE - $f" | sed 's/\(.*\)\..*/\1/'  >> .bliki/post_list)
done

sort -r .bliki/post_list > .bliki/sorted_post_list

SORTED_POSTS=`cat .bliki/sorted_post_list`

OLD_IFS=$IFS
IFS=$'\n' #set delimiter to newline 

for post in $SORTED_POSTS
do
    echo "$post" >> $INDEX_PAGE
done

IFS=$OLD_IFS

rm .bliki/post_list
rm .bliki/sorted_post_list

echo "" >> $INDEX_PAGE
echo "[_Posts RSS_](rss.xml)" >> $INDEX_PAGE
echo "" >> $INDEX_PAGE
echo "Wiki" >> $INDEX_PAGE
echo "----" >> $INDEX_PAGE
echo "" >> $INDEX_PAGE

# For the rest in alphabetical order echo filename

for f in $SRC_FILES
do
    echo $f | sed 's/\(.*\)\..*/\1/' >> $INDEX_PAGE
done

echo "" >> $INDEX_PAGE 

}

function generate_feed {
  echo "Generating feed..."

  rm -rf .bliki/xml
  mkdir .bliki/xml

cat << EOF > .bliki/xml/rss.xml
<?xml version="1.0" ?>
<rss version="2.0">
  <channel>
    <title>$_BLIKI_NAME</title>
    <link>$_BLIKI_URL</link>
    <description>$_BLIKI_DESC</description>
EOF

OLD_IFS=$IFS
IFS=$'\n' #set delimiter to newline 

  for post in $SORTED_POSTS
  do
    WIKI_WORD=`echo $post | awk '{print $4}'`
    cat << EOF >> .bliki/xml/rss.xml
    <item>
       <title>$WIKI_WORD</title>
       <link>$BLIKI_URL/$WIKI_WORD.html</link> 
    </item>
EOF
  done

IFS=$OLD_IFS

cat << EOF >> .bliki/xml/rss.xml
  </channel>
</rss>
EOF

}

function add_footer {
  echo "Adding footers..."

  rm -rf .bliki/intermediate
  mkdir .bliki/intermediate

  FILES=`ls *.txt`

  for f in $FILES
  do
	echo "Processing $f"
	cp $f .bliki/intermediate/$f

        cat << EOF >> .bliki/intermediate/$f

----
[ IndexPage | $CUSTOM_LINKS $FOOTER_TEXT ]
EOF

  done
}

function markdown_wikiwords {

  echo "Marking down WikiWords..."

  SED_FLAG=""

  if [ "$SYSTEM" == 'Darwin' ]
  then
    SED_FLAG="-E"
  fi

# Find CamelCase words by reg exp and replace with Markdown link [word](word.html)

  FILES=`ls .bliki/intermediate/*.txt`

  for f in $FILES
  do
    echo "Processing $f"
    perl -pe 's/(?<!~)([A-Z][a-z]*)+[A-Z][a-z]+([A-Z][a-z]*)*/[$&]($&.html)/g' <$f >${f}_
    perl -pe 's/(?<!~)~//g' <${f}_ >$f
  done
}

function bliki_to_html {

  echo "Making HTML..."

  FILES=`ls .bliki/intermediate/*.txt`

  rm -rf .bliki/html
  mkdir .bliki/html

  for f in $FILES
  do
    echo "Processing $f"
    NAME=`echo $f | sed 's/\(.*\)\..*/\1/'`
    markdown_py $f > $NAME.html
  done

  mv .bliki/intermediate/*.html .bliki/html/
}

function add_disqus {
  
  echo "Adding disqus HTML..."
 
  FILES=`ls .bliki/html/*.html`
  
  for f in $FILES
  do
    echo "Processing $f"
    WIKI_WORD=`find $f | awk -F'/' '{print $NF}'`
    WIKI_WORD=`echo $WIKI_WORD | sed 's/\(.*\)\..*/\1/'`
    cat $SCRIPT_DIR/.potbliki/disqus-template.html | sed -e 's/\[DISCUS_SHORTNAME\]/'"$_DISQUS_SHORTNAME"'/' -e 's/\[WIKI_WORD\]/'"$WIKI_WORD"'/' > specific-discus-template.html
    cat $f specific-discus-template.html > ${f}_
    mv ${f}_ $f 
  done

  rm specific-discus-template.html
}

function copy_to_targetdir {
  echo "Copying to $_TARGET_DIR..."

  # Check if path start with ~

  if [ "${_TARGET_DIR:0:1}" == '~' ]
  then
    _TARGET_DIR=`echo $HOME${_TARGET_DIR:1}`
  fi

  if [ ! -f $_TARGET_DIR ]
  then
    mkdir -p $_TARGET_DIR
  fi
  cp .bliki/html/* $_TARGET_DIR
  cp .bliki/xml/* $_TARGET_DIR

  if [ ! -e $_TARGET_DIR/index.html ]
  then
    ln -s $_TARGET_DIR/IndexPage.html $_TARGET_DIR/index.html
  fi

}

EXPECTED_ARGS=1
E_BADARGS=65

if [ $# -ne $EXPECTED_ARGS ]
then
  echo "usage: potwiki init|make|help"
  exit $E_BADARGS
fi

# init (make .bliki and .bliki_conf)

if [ $1 == 'init' ]
then
  init
fi

# make (run the markup scripts)

if [ $1 == 'make' ]
then
  make
fi

# help

if [ $1 == 'help' ]
then
  echo "usage: potwiki init|make|help"
  echo "init: inittiates a bliki in this directory."
  echo "make: makes the bliki in this directory and moves the result to target_dir."
fi


